//? imports
import { useContext, useEffect, useState } from "react";
import Head from "next/head";
import Image from "next/image";
import { ACTION_TYPES, StoreContext } from "../store/store-context";

//* components
import Banner from "../components/banner";
import Card from "../components/card";

//* Data
import { fetchCoffeeStores } from "../lib/coffee-stores";
import useTrackLocation from "../hooks/use-track-location";

//* styling
import styles from "../styles/Home.module.css";

// ---------------------------------------------------------------------------

//? Pre-fetching data
export async function getStaticProps() {
	//* Fetching data from api using a function
	const data = await fetchCoffeeStores();

	//* returning data as props
	return {
		props: {
			coffeeStores: data.slice(0, 6) || [],
		},
	};
}

// ---------------------------------------------------------------------------

export default function Home(props) {
	//? fetching stores on the spot
	//* hook to get information about users location
	const { handleTrackLocation, locationErrorMsg, isFindingLocation } =
		useTrackLocation();

	//* states
	const [coffeeStoresError, setCoffeeStoresError] = useState(null);
	const { dispatch, state } = useContext(StoreContext);
	const { coffeeStores, latLong } = state;

	//* handling new coffee stores when latLong changes
	useEffect(async () => {
		if (latLong) {
			try {
				const resp = await fetch(
					`/api/getCoffeeStoresByLocation?latLong=${latLong}&limit=30`
				);
				const coffeeStores = await resp.json();

				dispatch({
					type: ACTION_TYPES.SET_COFFEE_STORES,
					payload: {
						coffeeStores,
					},
				});

				setCoffeeStoresError("");
			} catch (err) {
				console.error(err);
				setCoffeeStoresError(err.message);
			}
		}
	}, [latLong]);

	//* when the banner button for view stores is clicked
	const handleOnBannerBtnClick = () => {
		handleTrackLocation();
	};

	//? app
	return (
		<div className={styles.container}>
			{/* Header */}
			<Head>
				<meta charset="utf-8"></meta>
				<meta name="author" content="Clupai8o0"></meta>
				<meta
					name="description"
					content="A project to help you find coffee shops in your area. (From ztm)"
				></meta>

				<title>Coffee Connoisseur</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			{/* Main app */}
			<main className={styles.main}>
				{/* Banner / Hero */}
				<Banner
					buttonText={isFindingLocation ? "Locating..." : "View stores nearby"}
					handleOnClick={handleOnBannerBtnClick}
				/>

				{locationErrorMsg && `Something wen't wrong ${locationErrorMsg}`}
				{coffeeStoresError && `Something wen't wrong ${coffeeStoresError}`}

				{/* Hero Image */}
				<div className={styles.heroImage}>
					<Image src="/static/hero-image.png" width={700} height={400} />
				</div>

				{/* Stores near me */}
				{coffeeStores.length > 0 && (
					<div className={styles.sectionWrapper}>
						<h2 className={styles.heading2}>Stores near me</h2>
						<div className={styles.cardLayout}>
							{coffeeStores.map((store) => (
								<Card
									key={store.id}
									name={store.name}
									imgUrl={
										store.imgUrl ||
										"https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"
									}
									href={`/coffee-store/${store.id}`}
								/>
							))}
						</div>
					</div>
				)}

				{/* Data */}
				{/* If data is there */}
				{/* Render it */}
				{props.coffeeStores.length > 0 && (
					<div className={styles.sectionWrapper}>
						<h2 className={styles.heading2}>Toronto Stores</h2>
						<div className={styles.cardLayout}>
							{props.coffeeStores.map((store) => (
								<Card
									key={store.id}
									name={store.name}
									imgUrl={
										store.imgUrl ||
										"https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"
									}
									href={`/coffee-store/${store.id}`}
								/>
							))}
						</div>
					</div>
				)}
			</main>
		</div>
	);
}
